# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.


def num(a, b):
    try:
        a = float(a)
        b = float(b)
        return a / b
    except ZeroDivisionError:
        return 'делить на ноль нельзя'


a = input('введите числитель ')
b = input('введите знаминатель ')
print(num(a, b))

# 2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.


def data(a, b, c, d, e, f):
    print(f"имя - {a}; фамилия - {b}; год рождения - {c}; город проживания - {d}; email - {e}; телефон - {f}")


data(a='иван', b='иванов', c='2000', d='иваново', e='ivanov@mail.ru', f='8(901)234-56-78')

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму
# наибольших двух аргументов.


def my_func00(a, b, c):
    a = float(a)
    b = float(b)
    c = float(c)
    if a <= b:
        if a <= c:
            return b + c
        else:
            return a + b
    else:
        if b <= c:
            return a + c
        else:
            return a + b


def my_func01(a, b, c):
    a = float(a)
    b = float(b)
    c = float(c)
    li = [a, b, c]
    f = min(li)
    return a + b + c - f


a = input('введите число ')
b = input('введите число ')
c = input('введите число ')
print('сумма наибольших двух: ', my_func00(a, b, c))
print('сумма наибольших двух: ', my_func01(a, b, c))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.


def my_func1(x, y):
    return x ** y


def my_func2(x, y):
    i = 0
    res = 1
    while i > y:
        res = 1 / x * res
        i = i - 1
    return res


while True:
    x = float(input('введите действительное положительное число x '))
    if x > 0:
        break
    else:
        print('ошибка ввода')
while True:
    y = input('введите целое отрицательное число y ')
    y = int(y)
    if y < 0:
        break
    else:
        print('ошибка ввода')
print('x в степени y: ', my_func1(x, y))
print('x в степени y: ', my_func2(x, y))


# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел
# к полученной ранее сумме и после этого завершить программу.


def sum_num():
    li = input('введите строку чисел, разделённых пробелом: ').split()
    print('нажмите enter для вывода суммы чисел ')
    res = 0
    while True:
        input()
        break
    for el in li:
        if el == 'стоп':   # специальный символ
            global st
            st = 1
            return res
        else:
            el = float(el)
            res += el
    return res


st = 0
res = sum_num()
print('сумма чисел в строке: ', res)
while True:
    if st == 1:
        break
    q = input('продолжить ввод чисел? формат ввода: да/нет').lower()
    if q == 'да':
        res = res + sum_num()
        print('сумма чисел в строке: ', res)
    if q == 'нет':
        break


# 6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

def int_func(word):
    return word.capitalize()


word = input('введите слово из маленьких латинских букв').lower()
print(int_func(word))


# 7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().

def int_func(word):
    return word.title()


word = input('введите строку слов из маленьких латинских букв, разделённых пробелом').lower()
print(int_func(word))
